{"version":3,"sources":["components/sectipon/Section.module.css","components/contactForm/ContactForm.module.css","components/sectipon/Section.js","redux/contactForm/contactFormActions.js","components/contactList/ContactList.js","components/contactForm/ContactForm.js","redux/filter/filterActions.js","components/filter/Filter.js","components/App.js","redux/contactForm/contactFormReducer.js","redux/filter/filterReduser.js","redux/rootReducer.js","redux/store.js","index.js","components/contactList/ContactList.module.css","components/filter/Filter.module.css"],"names":["module","exports","Section","title","children","className","styles","sectionTitle","defaultProps","SUBMIT_NEW_CONTACT","HANDLE_DELETE","getNormolizeContacts","state","formattedContacts","filter","items","toLowerCase","trim","contacts","contact","name","includes","mapDispatchToProps","handleDelete","id","type","payload","connect","ownProps","mainContainer","map","newContact","newContactName","number","btn","onClick","ContactForm","findDuplicate","props","some","alert","saveInputValueToState","evt","setState","target","value","handleSubmitForm","preventDefault","submitNewContact","uuid","resetForm","mainForm","onSubmit","this","inputContainer","labelName","onChange","inputName","pattern","required","placeholder","buttonAddContact","Component","data","FILTER","filterContacts","filter_items","htmlFor","App","contactFormCartReduser","combineReducers","action","error","filterReducer","rootReducer","contactFormReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ac62dce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"Section_sectionTitle__1p9rj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainForm\":\"ContactForm_mainForm__2N2Lr\",\"inputContainer\":\"ContactForm_inputContainer__1XPre\",\"labelName\":\"ContactForm_labelName__2LYZy\",\"inputName\":\"ContactForm_inputName__1TqKj\",\"buttonAddContact\":\"ContactForm_buttonAddContact__3KEi1\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './Section.module.css'\r\n\r\nconst Section = ({ title, children }) => {\r\n return (\r\n  <section>\r\n   <h2 className={styles.sectionTitle}>{title}</h2>\r\n   {children}\r\n  </section>\r\n );\r\n};\r\n\r\nSection.defaultProps = {\r\n title: \"\",\r\n};\r\n\r\n Section.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n };\r\nexport default Section;\r\n","const SUBMIT_NEW_CONTACT = \"contact/submitNewContact\";\r\nconst HANDLE_DELETE = \"contact/handleDelete \";\r\n\r\nexport { SUBMIT_NEW_CONTACT, HANDLE_DELETE };\r\n\r\nconst submitNewContact = (data) => ({\r\n type: SUBMIT_NEW_CONTACT,\r\n payload: data,\r\n});\r\n\r\nconst handleDelete = (id) => ({\r\n type: HANDLE_DELETE,\r\n payload: id,\r\n});\r\n\r\nexport { submitNewContact, handleDelete };","import React from \"react\";\r\nimport PropTypes, { object } from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleDelete } from \"../../redux/contactForm/contactFormActions\";\r\n\r\n\r\nconst ContactList = ({ contacts, handleDelete }) => {\r\n return (\r\n  <div className={styles.mainContainer}>\r\n   <ul>\r\n    {contacts.map((contact) => (\r\n     <li className={styles.newContact} key={contact.id}>\r\n      <p className={styles.newContactName}>\r\n       {contact.name} : {contact.number}\r\n      </p>\r\n      <button\r\n       type=\"button\"\r\n       className={styles.btn}\r\n       onClick={() => handleDelete(contact.id)}\r\n      >\r\n       Delete\r\n      </button>\r\n     </li>\r\n    ))}\r\n   </ul>\r\n  </div>\r\n );\r\n};\r\n\r\nContactList.propTypes = {\r\n filteredContacts: PropTypes.arrayOf(\r\n  PropTypes.shape({\r\n   id: PropTypes.string.isRequired,\r\n   name: PropTypes.string.isRequired,\r\n   number: PropTypes.string.isRequired,\r\n  })\r\n ),\r\n handleDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getNormolizeContacts = (state) => {\r\n const formattedContacts = state.filter.items.toLowerCase().trim();\r\n const filteredContacts = state.contacts.items.filter((contact) =>\r\n  contact.name.toLowerCase().includes(formattedContacts)\r\n );\r\n return filteredContacts;\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n contacts: getNormolizeContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n handleDelete,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { submitNewContact } from \"../../redux/contactForm/contactFormActions\";\r\n\r\nclass ContactForm extends Component {\r\n static propTypes = {\r\n  submitNewContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\n\r\n state = {\r\n  name: \"\",\r\n  number: \"\",\r\n };\r\n\r\n findDuplicate = (newContactName) => {\r\n  if (!newContactName) {\r\n   alert(\"The field cannot be empty!\");\r\n   return false;\r\n  }\r\n  const isDublicate = this.props.contacts.some(\r\n   (contact) => contact.name === newContactName\r\n  );\r\n\r\n  if (isDublicate) {\r\n   alert(\"This Name already exist!\" + newContactName);\r\n   return false;\r\n  }\r\n  return true;\r\n };\r\n\r\n saveInputValueToState = (evt) => {\r\n  this.setState({\r\n   [evt.target.name]: evt.target.value,\r\n  });\r\n };\r\n\r\n handleSubmitForm = (evt) => {\r\n  evt.preventDefault();\r\n\r\n  if (this.findDuplicate(this.state.name)) {\r\n   this.props.submitNewContact({ ...this.state, id: uuid() });\r\n   this.resetForm();\r\n  }\r\n };\r\n\r\n resetForm = () => {\r\n  this.setState({ name: \"\", number: \"\" });\r\n };\r\n\r\n render() {\r\n  return (\r\n   <>\r\n    <form className={styles.mainForm} onSubmit={this.handleSubmitForm}>\r\n     <div className={styles.inputContainer}>\r\n      <label className={styles.labelName}>Name</label>\r\n      <input\r\n       onChange={this.saveInputValueToState}\r\n       type=\"text\"\r\n       name=\"name\"\r\n       className={styles.inputName}\r\n       pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n       title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n       required\r\n       placeholder=\"Enter Name\"\r\n      ></input>\r\n     </div>\r\n\r\n     <div className={styles.inputContainer}>\r\n      <label className={styles.labelName}>Number</label>\r\n      <input\r\n       onChange={this.saveInputValueToState}\r\n       type=\"tel\"\r\n       name=\"number\"\r\n       className={styles.inputName}\r\n       pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n       title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n       required\r\n      />\r\n     </div>\r\n     <button type=\"submit\" className={styles.buttonAddContact}>\r\n      Add contact\r\n     </button>\r\n    </form>\r\n   </>\r\n  );\r\n }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n submitNewContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","const FILTER = \"contact/handleDelete \";\r\n\r\nexport { FILTER };\r\n\r\nconst filterContacts = (evt) => ({\r\n type: FILTER,\r\n payload: evt,\r\n});\r\n\r\nexport { filterContacts };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterContacts } from \"../../redux/filter/filterActions\";\r\n\r\nconst Filter = ({ filter, filterContacts }) => {\r\n return (\r\n  <div className={styles.mainContainer}>\r\n   <div className={styles.inputContainer}>\r\n    <label className={styles.labelName} htmlFor=\"filter\">\r\n     Find contact by name\r\n    </label>\r\n    <input\r\n     onChange={filterContacts}\r\n     type=\"text\"\r\n     name=\"filter\"\r\n     id=\"filter\"\r\n     value={filter}\r\n     className={styles.inputName}\r\n    ></input>\r\n   </div>\r\n  </div>\r\n );\r\n};\r\n\r\nFilter.propTypes = {\r\n filter: PropTypes.string.isRequired,\r\n filterContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n filter: state.filter.filter_items,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n filterContacts: (evt) => filterContacts(evt.target.value),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport Section from \"./sectipon/Section\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport Filter from \"./filter/Filter\";\r\n\r\nclass App extends Component {\r\n //  componentDidMount() {\r\n //   const items = localStorage.getItem(\"contacts\");\r\n //   if (items) {\r\n //    const parsedContacts = JSON.parse(items);\r\n //    this.setState({ contacts: parsedContacts });\r\n //   }\r\n //  }\r\n\r\n //  componentDidUpdate(prevProps, prevState) {\r\n //   if (prevState.contacts !== this.state.contacts) {\r\n //    localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n //   }\r\n //  }\r\n\r\n render() {\r\n  return (\r\n   <>\r\n    <Section title={\"Phonebook\"}>\r\n     <ContactForm />\r\n    </Section>\r\n\r\n    <Section title={\"Contacts\"}>\r\n     <Filter />\r\n\r\n     <ContactList />\r\n    </Section>\r\n   </>\r\n  );\r\n }\r\n}\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { SUBMIT_NEW_CONTACT, HANDLE_DELETE } from \"./contactFormActions\";\r\n\r\nconst itemsReducer = (\r\n state = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n ],\r\n action\r\n) => {\r\n switch (action.type) {\r\n  case SUBMIT_NEW_CONTACT:\r\n   return [...state, action.payload];\r\n\r\n  case HANDLE_DELETE:\r\n   return state.filter((contact) => contact.id !== action.payload);\r\n\r\n  default:\r\n   return state;\r\n }\r\n};\r\n\r\nconst errorReduser = (state = \"\", action) => {\r\n return state;\r\n};\r\n\r\nconst contactFormCartReduser = combineReducers({\r\n items: itemsReducer,\r\n error: errorReduser,\r\n});\r\n\r\nexport default contactFormCartReduser;\r\n","import { FILTER } from \"./filterActions\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst filterItemsReducer = (state = '', action) => {\r\n switch (action.type) {\r\n  case FILTER:\r\n     return action.payload ;\r\n\r\n  default:\r\n    return state;\r\n }\r\n}\r\n\r\nconst filterItemsError = (state =\"\", action) => {\r\n return state;\r\n}\r\n\r\nconst filterReducer = combineReducers({\r\n items: filterItemsReducer,\r\n error: filterItemsError,\r\n});\r\n\r\nexport { filterReducer };","import {combineReducers} from 'redux';\r\nimport contactFormReducer from '../redux/contactForm/contactFormReducer';\r\nimport { filterReducer } from './filter/filterReduser';\r\n\r\nconst rootReducer = combineReducers({\r\n contacts: contactFormReducer,\r\n filter: filterReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"modern-normalize/modern-normalize.css\";\nimport './index.css';\nimport App from './components/App';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n <React.StrictMode>\n  <Provider store={store}>\n   <App />\n  </Provider>\n </React.StrictMode>,\n document.getElementById(\"root\")\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"ContactList_mainContainer__386ge\",\"newContact\":\"ContactList_newContact__3Fjdk\",\"newContactName\":\"ContactList_newContactName__2q1NH\",\"btn\":\"ContactList_btn__3mw9S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Filter_mainContainer__2aysT\",\"inputContainer\":\"Filter_inputContainer__1zTRn\",\"labelName\":\"Filter_labelName__2TpQi\",\"inputName\":\"Filter_inputName__2NCs4\",\"buttonAddContact\":\"Filter_buttonAddContact__1hbIi\"};"],"sourceRoot":""}