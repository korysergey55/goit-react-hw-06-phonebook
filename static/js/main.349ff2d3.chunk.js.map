{"version":3,"sources":["components/sectipon/Section.module.css","components/contactForm/ContactForm.module.css","components/sectipon/Section.js","components/contactList/ContactList.js","components/contactForm/ContactForm.js","components/filter/Filter.js","components/App.js","index.js","components/contactList/ContactList.module.css","components/filter/Filter.module.css"],"names":["module","exports","Section","title","children","className","styles","sectionTitle","defaultProps","ContactList","filteredContacts","handleDelete","mainContainer","map","contact","newContact","newContactName","name","number","type","btn","onClick","id","ContactForm","state","saveInputValueToState","evt","setState","target","value","handleSubmitForm","preventDefault","props","findDuplicate","submitNewContact","resetForm","mainForm","onSubmit","this","inputContainer","labelName","onChange","inputName","pattern","required","placeholder","buttonAddContact","Component","Filter","filter","filterContacts","htmlFor","App","contacts","data","newTodo","uuid","prevState","some","alert","items","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","formattedContacts","toLowerCase","trim","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.349ff2d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"Section_sectionTitle__1p9rj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainForm\":\"ContactForm_mainForm__2N2Lr\",\"inputContainer\":\"ContactForm_inputContainer__1XPre\",\"labelName\":\"ContactForm_labelName__2LYZy\",\"inputName\":\"ContactForm_inputName__1TqKj\",\"buttonAddContact\":\"ContactForm_buttonAddContact__3KEi1\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './Section.module.css'\r\n\r\nconst Section = ({ title, children }) => {\r\n return (\r\n  <section>\r\n   <h2 className={styles.sectionTitle}>{title}</h2>\r\n   {children}\r\n  </section>\r\n );\r\n};\r\n\r\nSection.defaultProps = {\r\n title: \"\",\r\n};\r\n\r\n Section.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n };\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes, { object } from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ filteredContacts, handleDelete }) => {\r\n return (\r\n  <div className={styles.mainContainer}>\r\n    <ul>\r\n    {filteredContacts.map((contact) => (\r\n     <li className={styles.newContact} key={contact.id}>\r\n      <p className={styles.newContactName}>\r\n       {contact.name} : {contact.number}\r\n      </p>\r\n      <button\r\n       type=\"button\"\r\n       className={styles.btn}\r\n       onClick={() => handleDelete(contact.id)}\r\n      >\r\n       Delete\r\n      </button>\r\n     </li>\r\n    ))}\r\n   </ul>\r\n  </div>\r\n );\r\n};\r\n\r\nContactList.propTypes = {\r\n filteredContacts: PropTypes.arrayOf(\r\n  PropTypes.shape({\r\n   id: PropTypes.string.isRequired,\r\n   name: PropTypes.string.isRequired,\r\n   number: PropTypes.string.isRequired,\r\n  })\r\n ),\r\n handleDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ContactForm extends Component {\r\n static propTypes = {\r\n  submitNewContact: PropTypes.func.isRequired,\r\n  findDuplicate: PropTypes.func.isRequired,\r\n };\r\n\r\n state = {\r\n  name: \"\",\r\n  number: \"\",\r\n };\r\n\r\n saveInputValueToState = (evt) => {\r\n  this.setState({\r\n   [evt.target.name]: evt.target.value,\r\n  });\r\n };\r\n\r\n handleSubmitForm = (evt) => {\r\n  evt.preventDefault();\r\n\r\n  if (this.props.findDuplicate(this.state.name)) {\r\n   this.props.submitNewContact(this.state);\r\n   this.resetForm();\r\n  }\r\n };\r\n\r\n resetForm = () => {\r\n  this.setState({ name: \"\", number: \"\", id: \"\" });\r\n };\r\n\r\n render() {\r\n  return (\r\n   <>\r\n    <form className={styles.mainForm} onSubmit={this.handleSubmitForm}>\r\n     <div className={styles.inputContainer}>\r\n      <label className={styles.labelName}>Name</label>\r\n      <input\r\n       onChange={this.saveInputValueToState}\r\n       type=\"text\"\r\n       name=\"name\"\r\n       className={styles.inputName}\r\n       pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n       title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n       required\r\n       placeholder=\"Enter Name\"\r\n      ></input>\r\n     </div>\r\n\r\n     <div className={styles.inputContainer}>\r\n      <label className={styles.labelName}>Number</label>\r\n      <input\r\n       onChange={this.saveInputValueToState}\r\n       type=\"tel\"\r\n       name=\"number\"\r\n       className={styles.inputName}\r\n       pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n       title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n       required\r\n      />\r\n     </div>\r\n     <button type=\"submit\" className={styles.buttonAddContact}>\r\n      Add contact\r\n     </button>\r\n    </form>\r\n   </>\r\n  );\r\n }\r\n}\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({filter, filterContacts }) => {\r\n return (\r\n  <div className={styles.mainContainer}>\r\n   <div className={styles.inputContainer}>\r\n    <label className={styles.labelName} htmlFor=\"filter\">\r\n    Find contact by name\r\n   </label>\r\n   <input\r\n    onChange={filterContacts}\r\n    type=\"text\"\r\n    name=\"filter\"\r\n    id=\"filter\"\r\n    value={filter}\r\n    className={styles.inputName}\r\n   ></input>\r\n    </div>\r\n   </div>\r\n  );\r\n };\r\n\r\n Filter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  filterContacts: PropTypes.func.isRequired,\r\n };\r\n export default Filter;\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport Section from \"./sectipon/Section\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport Filter from \"./filter/Filter\";\r\n\r\nclass App extends Component {\r\n state = {\r\n  contacts: [\r\n   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  ],\r\n  filter: \"\",\r\n };\r\n\r\n componentDidMount() {\r\n  const items = localStorage.getItem(\"contacts\");\r\n  if (items) {\r\n   const parsedContacts = JSON.parse(items);\r\n   this.setState({ contacts: parsedContacts });\r\n  }\r\n }\r\n\r\n componentDidUpdate(prevProps, prevState) {\r\n  if (prevState.contacts !== this.state.contacts) {\r\n   localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n  }\r\n }\r\n\r\n submitNewContact = (data) => {\r\n  const newTodo = {\r\n   name: data.name,\r\n   number: data.number,\r\n   id: uuid(),\r\n  };\r\n\r\n  this.setState((prevState) => {\r\n   const newContact = [newTodo, ...prevState.contacts];\r\n   return { contacts: newContact };\r\n  });\r\n };\r\n\r\n findDuplicate = (newContactName) => {\r\n  if (!newContactName) {\r\n   alert(\"The field cannot be empty!\");\r\n   return false;\r\n  }\r\n  const isDublicate = this.state.contacts.some(\r\n   (contact) => contact.name === newContactName\r\n  );\r\n\r\n  if (isDublicate) {\r\n   alert(\"This Name already exist!\" + newContactName);\r\n   return false;\r\n  }\r\n  return true;\r\n };\r\n\r\n handleDelete = (id) => {\r\n  this.setState((prevState) => ({\r\n   contacts: prevState.contacts.filter((contact) => contact.id !== id),\r\n  }));\r\n };\r\n\r\n filterContacts = (evt) => {\r\n  this.setState({\r\n   [evt.target.name]: evt.target.value,\r\n  });\r\n };\r\n\r\n render() {\r\n  const formattedContacts = this.state.filter.toLowerCase().trim();\r\n  const filteredContacts = this.state.contacts.filter((contact) =>\r\n   contact.name.toLowerCase().includes(formattedContacts)\r\n  );\r\n\r\n  return (\r\n   <>\r\n    <Section title={\"Phonebook\"}>\r\n     <ContactForm\r\n      submitNewContact={this.submitNewContact}\r\n      findDuplicate={this.findDuplicate}\r\n     />\r\n    </Section>\r\n\r\n    <Section title={\"Contacts\"}>\r\n     <Filter filter={this.state.filter} filterContacts={this.filterContacts} />\r\n\r\n     <ContactList\r\n      filteredContacts={filteredContacts}\r\n      handleDelete={this.handleDelete}\r\n     />\r\n    </Section>\r\n   </>\r\n  );\r\n }\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"modern-normalize/modern-normalize.css\";\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"ContactList_mainContainer__386ge\",\"newContact\":\"ContactList_newContact__3Fjdk\",\"newContactName\":\"ContactList_newContactName__2q1NH\",\"btn\":\"ContactList_btn__3mw9S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Filter_mainContainer__2aysT\",\"inputContainer\":\"Filter_inputContainer__1zTRn\",\"labelName\":\"Filter_labelName__2TpQi\",\"inputName\":\"Filter_inputName__2NCs4\",\"buttonAddContact\":\"Filter_buttonAddContact__1hbIi\"};"],"sourceRoot":""}